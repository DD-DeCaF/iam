apiVersion: apps/v1
kind: Deployment
metadata:
  name: iam-production
spec:
  selector:
    matchLabels:
      app: iam
      env: production
  replicas: 1
  template:
    metadata:
      labels:
        app: iam
        env: production
    spec:
      containers:
      - name: web
        image: gcr.io/dd-decaf-cfbf6/iam:master
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: production
        - name: SCRIPT_NAME
          value: /iam
        - name: FLASK_APP
          value: src/iam/wsgi.py
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: iam-production
              key: SECRET_KEY
        - name: ALLOWED_ORIGINS
          value: https://app.dd-decaf.eu,http://localhost:4200
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: iam-production
              key: SENTRY_DSN
        - name: SERVICE_URL
          value: /iam
        - name: BASIC_AUTH_USERNAME
          valueFrom:
            secretKeyRef:
              name: iam-production
              key: BASIC_AUTH_USERNAME
        - name: BASIC_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iam-production
              key: BASIC_AUTH_PASSWORD
        - name: FEAT_TOGGLE_LOCAL_AUTH
          value: "1"
        - name: DB_HOST
          value: localhost
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: iam
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: iam-production
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iam-production
              key: DB_PASSWORD
        - name: FEAT_TOGGLE_FIREBASE
          value: "1"
        - name: FIREBASE_PROJECT_ID
          value: dd-decaf-cfbf6
        - name: FIREBASE_CLIENT_CERT_URL
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_CLIENT_CERT_URL
        - name: FIREBASE_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_CLIENT_EMAIL
        - name: FIREBASE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_CLIENT_ID
        - name: FIREBASE_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_PRIVATE_KEY
        - name: FIREBASE_PRIVATE_KEY_ID
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_PRIVATE_KEY_ID
        - name: prometheus_multiproc_dir
          value: /prometheus-client
        volumeMounts:
        - name: rsa
          mountPath: "/app/keys"
          readOnly: true
        - name: prometheus-client
          mountPath: /prometheus-client
        command: ["gunicorn", "-c", "gunicorn.py", "iam.wsgi:app"]
        readinessProbe:
          httpGet:
            path: /iam/healthz
            port: 8000
          initialDelaySeconds: 5
        resources:
          requests:
            cpu: "10m"
            memory: "256Mi"
          limits:
            cpu: "500m"
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy", "-instances=dd-decaf-cfbf6:europe-west1:dd-decaf=tcp:5432", "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "100m"
      volumes:
      - name: rsa
        secret:
          secretName: iam-rsa-production
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      - name: prometheus-client
        emptyDir: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: iam-staging
spec:
  selector:
    matchLabels:
      app: iam
      env: staging
  replicas: 1
  template:
    metadata:
      labels:
        app: iam
        env: staging
    spec:
      containers:
      - name: web
        image: gcr.io/dd-decaf-cfbf6/iam:devel
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: staging
        - name: SCRIPT_NAME
          value: /iam
        - name: FLASK_APP
          value: src/iam/wsgi.py
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: SECRET_KEY
        - name: ALLOWED_ORIGINS
          value: https://staging.dd-decaf.eu,https://caffeine.dd-decaf.eu,http://localhost:4200
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: SENTRY_DSN
        - name: SERVICE_URL
          value: /iam
        - name: BASIC_AUTH_USERNAME
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: BASIC_AUTH_USERNAME
        - name: BASIC_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: BASIC_AUTH_PASSWORD
        - name: FEAT_TOGGLE_LOCAL_AUTH
          value: "1"
        - name: DB_HOST
          value: localhost
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: iam_staging
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: DB_PASSWORD
        - name: FEAT_TOGGLE_FIREBASE
          value: "1"
        - name: FIREBASE_PROJECT_ID
          value: dd-decaf-cfbf6
        - name: FIREBASE_CLIENT_CERT_URL
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_CLIENT_CERT_URL
        - name: FIREBASE_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_CLIENT_EMAIL
        - name: FIREBASE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_CLIENT_ID
        - name: FIREBASE_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_PRIVATE_KEY
        - name: FIREBASE_PRIVATE_KEY_ID
          valueFrom:
            secretKeyRef:
              name: iam-staging
              key: FIREBASE_PRIVATE_KEY_ID
        - name: prometheus_multiproc_dir
          value: /prometheus-client
        volumeMounts:
        - name: rsa
          mountPath: "/app/keys"
          readOnly: true
        - name: prometheus-client
          mountPath: /prometheus-client
        command: ["gunicorn", "-c", "gunicorn.py", "iam.wsgi:app"]
        readinessProbe:
          httpGet:
            path: /iam/healthz
            port: 8000
          initialDelaySeconds: 5
        resources:
          requests:
            cpu: "5m"
          limits:
            cpu: "100m"
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy", "-instances=dd-decaf-cfbf6:europe-west1:dd-decaf=tcp:5432", "-credential_file=/secrets/cloudsql/credentials.json"]
        resources:
          requests:
            cpu: "5m"
          limits:
            cpu: "100m"
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
      - name: rsa
        secret:
          secretName: iam-rsa-staging
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      - name: prometheus-client
        emptyDir: {}
