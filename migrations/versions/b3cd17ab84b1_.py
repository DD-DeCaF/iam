"""empty message

Revision ID: b3cd17ab84b1
Revises: c35e9bbece72
Create Date: 2018-04-17 13:26:44.726578

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b3cd17ab84b1'
down_revision = 'c35e9bbece72'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization_project',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'write', 'read', name='project_roles'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'project_id')
    )
    op.create_table('user_project',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'write', 'read', name='project_roles'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    op.create_table('team_project',
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'write', 'read', name='project_roles'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('team_id', 'project_id')
    )
    op.drop_constraint('project_organization_id_fkey', 'project', type_='foreignkey')
    op.drop_constraint('project_team_id_fkey', 'project', type_='foreignkey')
    op.drop_constraint('project_user_id_fkey', 'project', type_='foreignkey')
    op.drop_column('project', 'organization_id')
    op.drop_column('project', 'organization_role')
    op.drop_column('project', 'team_role')
    op.drop_column('project', 'team_id')
    op.drop_column('project', 'user_id')
    op.drop_column('project', 'user_role')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('project', sa.Column('user_role', postgresql.ENUM('admin', 'write', 'read', name='project_roles'), autoincrement=False, nullable=True))
    op.add_column('project', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('project', sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('project', sa.Column('team_role', postgresql.ENUM('admin', 'write', 'read', name='project_roles'), autoincrement=False, nullable=True))
    op.add_column('project', sa.Column('organization_role', postgresql.ENUM('admin', 'write', 'read', name='project_roles'), autoincrement=False, nullable=True))
    op.add_column('project', sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('project_user_id_fkey', 'project', 'user', ['user_id'], ['id'])
    op.create_foreign_key('project_team_id_fkey', 'project', 'team', ['team_id'], ['id'])
    op.create_foreign_key('project_organization_id_fkey', 'project', 'organization', ['organization_id'], ['id'])
    op.drop_table('team_project')
    op.drop_table('user_project')
    op.drop_table('organization_project')
    # ### end Alembic commands ###
